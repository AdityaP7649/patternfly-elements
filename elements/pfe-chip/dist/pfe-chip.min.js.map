{"version":3,"file":"pfe-chip.min.js","sources":["../_temp/pfe-chip.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeChip 1.0.0-prerelease.39\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\nimport PfeBadge from \"../../pfe-badge/dist/pfe-badge.js\";\nimport PfeIcon from \"../../pfe-icon/dist/pfe-icon.js\";\n\nclass PfeChip extends PFElement {\n  static get version() {\n    return \"1.0.0-prerelease.39\";\n  }\n\n  get html() {\n    return `<style>.pfe-chip__button,.pfe-chip__close{background-color:transparent;border:none;margin:0;padding:0;text-align:left}.pfe-chip__button::after,.pfe-chip__close::after,:host::before{content:\"\";position:absolute;top:0;right:0;bottom:0;left:0}:host{--pfe-chip--PaddingTop:0;--pfe-chip--PaddingRight:0;--pfe-chip--PaddingBottom:0;--pfe-chip--PaddingLeft:var(--pfe-theme--spacer--sm, 0.5rem);--pfe-chip--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-chip--BorderColor:var(--pfe-theme--color--surface--border--darkest, #464646);--pfe-chip--BorderWidth:var(--pfe-theme--ui--border-width, 1px);--pfe-chip--BorderRadius:var(--pfe-theme--ui--border-radius, 2px);--pfe-chip--BackgroundColor--overflow:var(--pfe-theme--color--surface--lighter, #ececec);--pfe-chip--PaddingLeft--overflow:0;--pfe-chip--BorderWidth--overflow:0;--pfe-chip--PaddingTop--readonly:var(--pfe-theme--form-spacer, 0.375rem);--pfe-chip--PaddingRight--readonly:var(--pfe-theme--spacer--sm, 0.5rem);--pfe-chip--PaddingBottom--readonly:var(--pfe-theme--form-spacer, 0.375rem);--pfe-chip__text--FontSize:var(--pfe-theme--font-size--xs, 12px);--pfe-chip__text--LineHeight:var(--pfe-theme--line-height, 1.5);--pfe-chip__text--Color:var(--pfe-theme--text, #333);--pfe-chip__text--MaxWidth:7.5rem;--pfe-chip__button--PaddingTop:var(--pfe-theme--form-spacer, 0.375rem);--pfe-chip__button--PaddingRight:var(--pfe-theme--spacer--sm, 0.5rem);--pfe-chip__button--PaddingBottom:var(--pfe-theme--form-spacer, 0.375rem);--pfe-chip__button--PaddingLeft:var(--pfe-theme--spacer--sm, 0.5rem);--pfe-chip__button--size:var(--pfe-theme--font-size--xs, 12px);--pfe-chip__button--BackgroundColor:#797979;--pfe-chip__button--BackgroundColor--hover:var(--pfe-theme--color--ui-complement--hover, #131313);--pfe-chip__button--BackgroundColor--focus:var(--pfe-theme--color--ui-complement--hover, #131313);--pfe-chip__button--BackgroundColor--active:var(--pfe-theme--color--ui-complement--hover, #131313);--pfe-chip__button--BackgroundColor--disabled:var(--pfe-theme--color--ui-disabled, #d2d2d2);--pfe-chip__button--BorderWidth:0;--pfe-chip__button--BorderColor:var(--pfe-theme--color--surface--border--darkest, #464646);--pfe-chip__button--BorderRadius:var(--pfe-theme--ui--border-radius, 2px);--pfe-chip__button--BorderWidth--overflow--hover:var(--pfe-theme--ui--border-width, 1px);--pfe-chip__button--BorderWidth--overflow--active:var(--pfe-theme--ui--border-width, 1px);--pfe-chip__button--BorderWidth--overflow--focus:var(--pfe-theme--ui--border-width, 1px);--pfe-chip__badge--MarginLeft:var(--pfe-theme--spacer--xs, 0.25rem);display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;color:#333;color:var(--pfe-theme--text,#333);padding:var(--pfe-chip--PaddingTop) var(--pfe-chip--PaddingRight) var(--pfe-chip--PaddingBottom) var(--pfe-chip--PaddingLeft);list-style:none;background-color:var(--pfe-chip--BackgroundColor);border-radius:var(--pfe-chip--BorderRadius)}:host::before{border:var(--pfe-chip--BorderWidth) solid var(--pfe-chip--BorderColor);border-radius:var(--pfe-chip--BorderRadius)}:host([hidden]){display:none}:host([on=dark]),:host([on=saturated]){--pfe-chip--BorderWidth:0}.pfe-chip__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-width:var(--pfe-chip__text--MaxWidth);font-size:var(--pfe-chip__text--FontSize);line-height:var(--pfe-chip__text--LineHeight);color:var(--pfe-chip__text--Color)}.pfe-chip__badge{margin-left:var(--pfe-chip__badge--MarginLeft)}.pfe-chip__button,.pfe-chip__close{position:relative;display:inline-block;text-align:center;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding:var(--pfe-chip__button--PaddingTop) var(--pfe-chip__button--PaddingRight) var(--pfe-chip__button--PaddingBottom) var(--pfe-chip__button--PaddingLeft)}.pfe-chip__button::after,.pfe-chip__close::after{border:var(--pfe-chip__button--BorderWidth) solid var(--pfe-chip__button--BorderColor);border:var(--pfe-chip__button--BorderWidth) var(--pfe-theme--ui--border-style,solid) var(--pfe-chip__button--BorderColor);border-radius:var(--pfe-chip__button--BorderRadius)}.pfe-chip__button svg,.pfe-chip__close svg{display:inline-block;height:calc(var(--pfe-chip__button--size) * 1.5);width:var(--pfe-chip__button--size);line-height:1;vertical-align:-.125em;fill:var(--pfe-chip__button--BackgroundColor)}.pfe-chip__button:hover,.pfe-chip__close:hover{cursor:pointer}.pfe-chip__button:hover,.pfe-chip__close:hover{--pfe-chip__button--BorderWidth:var(--pfe-chip__button--BorderWidth--hover);--pfe-chip__button--BackgroundColor:var(--pfe-chip__button--BackgroundColor--hover)}:host([on=dark]) .pfe-chip__button:hover::after,:host([on=dark]) .pfe-chip__close:hover::after{margin:1px}.pfe-chip__button:active,.pfe-chip__close:active{--pfe-chip__button--BorderWidth:var(--pfe-chip__button--BorderWidth--active);--pfe-chip__button--BackgroundColor:var(--pfe-chip__button--BackgroundColor--active)}:host([on=dark]) .pfe-chip__button:active::after,:host([on=dark]) .pfe-chip__close:active::after{margin:1px}.pfe-chip__button:focus,.pfe-chip__close:focus{--pfe-chip__button--BorderWidth:var(--pfe-chip__button--BorderWidth--focus);--pfe-chip__button--BackgroundColor:var(--pfe-chip__button--BackgroundColor--focus)}:host([on=dark]) .pfe-chip__button:focus::after,:host([on=dark]) .pfe-chip__close:focus::after{margin:1px}:host([pfe-read-only]){--pfe-chip--PaddingTop:var(--pfe-chip--PaddingTop--readonly);--pfe-chip--PaddingRight:var(--pfe-chip--PaddingRight--readonly);--pfe-chip--PaddingBottom:var(--pfe-chip--PaddingBottom--readonly)}:host([pfe-overflow]){--pfe-chip--PaddingLeft:var(--pfe-chip--PaddingLeft--overflow);--pfe-chip--BackgroundColor:var(--pfe-chip--BackgroundColor--overflow);--pfe-chip--BorderWidth:var(--pfe-chip--BorderWidth--overflow);--pfe-chip__button--BorderWidth--hover:var(--pfe-chip__button--BorderWidth--overflow--hover);--pfe-chip__button--BorderWidth--active:var(--pfe-chip__button--BorderWidth--overflow--active);--pfe-chip__button--BorderWidth--focus:var(--pfe-chip__button--BorderWidth--overflow--focus)}\n/*# sourceMappingURL=pfe-chip.min.css.map */\n</style><slot hidden aria-hidden=\"true\"></slot>\n\n${this.props[\"overflow\"].value ? `<button class=\"pfe-chip__button\" type=\"button\" aria-labelledby=\"chip\">` : \"\"}\n    <span class=\"pfe-chip__text\" id=\"chip\" aria-hidden=\"true\"></span>\n    ${this.has_slot(\"pfe-chip--badge\") ? `<pfe-badge class=\"pfe-chip__badge\"><slot name=\"pfe-chip--badge\"></slot></pfe-badge>` : \"\"}\n${this.props[\"overflow\"].value ? `</button>` : \"\"}\n\n${this.printCloseButton ? `<button class=\"pfe-chip__close\" type=\"button\" aria-labelledby=\"remove_chip chip\" aria-label=\"Remove\" id=\"remove_chip\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" aria-hidden=\"true\"><path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"/></svg>\n</button>` : \"\"}`;\n  }\n\n  static get properties() {\n    return {\"read-only\":{\"title\":\"Read only\",\"type\":\"boolean\",\"default\":false,\"prefixed\":true},\"overflow\":{\"title\":\"Overflow\",\"type\":\"number\",\"prefixed\":true},\"badge\":{\"title\":\"Badge\",\"type\":\"number\",\"prefixed\":true}};\n  }\n\n  static get slots() {\n    return {\"default\":{\"title\":\"Default slot\",\"type\":\"array\",\"namedSlot\":false,\"items\":{\"oneOf\":[{\"$ref\":\"raw\"}]}},\"badge\":{\"title\":\"Badge\",\"type\":\"array\",\"namedSlot\":true,\"items\":{\"title\":\"Badge item\",\"oneOf\":[{\"$ref\":\"raw\"}]}}};\n  }\n  static get tag() {\n    return \"pfe-chip\";\n  }\n\n  get schemaUrl() {\n    return \"pfe-chip.json\";\n  }\n\n  get templateUrl() {\n    return \"pfe-chip.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-chip.scss\";\n  }\n\n  get printCloseButton() {\n    return !this.props[\"read-only\"].value && !this.props[\"overflow\"].value;\n  }\n\n  hide() {\n    this.setAttribute(\"hidden\", \"\");\n  }\n\n  show() {\n    this.removeAttribute(\"hidden\");\n  }\n\n  delete() {\n    this.parentNode.removeChild(this);\n  }\n\n  static get events() {\n    return {\n      close: `${this.tag}:close`,\n      load: `${this.tag}:load`\n    };\n  }\n\n  static get observedAttributes() {\n    return [\"pfe-read-only\", \"pfe-overflow\"];\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  constructor() {\n    super(PfeChip, { type: PfeChip.PfeType });\n\n    this._text = this.shadowRoot.querySelector(`.${this.tag}__text`);\n    this._badge = this.shadowRoot.querySelector(`pfe-badge`);\n    this._close = this.shadowRoot.querySelector(`.${this.tag}__close`);\n    this._add = this.shadowRoot.querySelector(`.${this.tag}__button`);\n\n    this._init = this._init.bind(this);\n    this._clickHandler = this._clickHandler.bind(this);\n    this._keyupHandler = this._keyupHandler.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.badge = this.querySelector(`[slot=\"${this.tag}--badge\"]`);\n\n    // Add a slotchange listener to the lightDOM trigger\n    if (this.badge) {\n      this.badge.addEventListener(\"slotchange\", this._init);\n    }\n\n    // @TODO load icon using pfe-icon instead of hardcoding SVG\n    // Promise.all([\n    //   customElements.whenDefined(PfeIcon.tag)\n    // ]).then(() => {\n    //   // Set up font-awesome icon set\n    //   if(!PfeIcon._iconSets[\"fas\"]) {\n    //     PfeIcon.addIconSet(\n    //       \"fas\",\n    //       \"https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/svgs/solid\",\n    //       (iconName, setName, path) => {\n    //         const name = iconName.replace(\"fas-\", \"\");\n    //         return `${path}/${name}.svg`;\n    //       }\n    //     );\n    //   }\n    // });\n\n    this._init();\n  }\n\n  // Process the attribute change\n  attributeChangedCallback(attr, oldValue, newValue) {\n    super.attributeChangedCallback(attr, oldValue, newValue);\n  }\n\n  _init() {\n    // Capture the text content and move it to the Shadow DOM\n    if (this.firstChild && this.firstChild.textContent.trim()) {\n      this._text.textContent = this.firstChild.textContent.trim();\n    } else if (\n      this.firstElementChild &&\n      this.firstElementChild.textContent.trim()\n    ) {\n      this._text.textContent = this.firstElementChild.textContent.trim();\n    }\n\n    // If the badge element exists, check that it's value is numeric\n    let badgeContent = \"\";\n    if (this.badge) {\n      badgeContent = this.badge.textContent;\n    } else if (this.props.badge) {\n      badgeContent = this.props.badge.value;\n    }\n\n    if (badgeContent) {\n      if (isNaN(badgeContent)) {\n        console.warn(`${this.tag}: The badge content must be numeric.`);\n      } else {\n        this._badge.setAttribute(\"number\", this.badge.textContent);\n      }\n    }\n\n    // If this is not a read-only chip, attach event listeners\n    if (this._close) {\n      this._close.addEventListener(\"click\", this._clickHandler);\n      this._close.addEventListener(\"keyup\", this._keyupHandler);\n    }\n\n    // If this is not a read-only chip, attach event listeners\n    if (this._add) {\n      this._add.addEventListener(\"click\", this._clickHandler);\n      this._add.addEventListener(\"keyup\", this._keyupHandler);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.badge) {\n      this.badge.removeEventListener(\"slotchange\", this._init);\n    }\n\n    if (this._close) {\n      this._close.removeEventListener(\"click\", this._clickHandler);\n      this._close.removeEventListener(\"keyup\", this._keyupHandler);\n    }\n\n    if (this._add) {\n      this._add.removeEventListener(\"click\", this._clickHandler);\n      this._add.removeEventListener(\"keyup\", this._keyupHandler);\n    }\n  }\n\n  _clickHandler(event) {\n    if (!this.props.overflow) {\n      this.emitEvent(PfeChip.events.close);\n    } else {\n      this.emitEvent(PfeChip.events.load);\n    }\n  }\n\n  _keyupHandler(event) {\n    let key = event.key || event.keyCode;\n    switch (key) {\n      case \"Enter\":\n      case 13:\n        if (!this.props.overflow) {\n          this.emitEvent(PfeChip.events.close);\n        } else {\n          this.emitEvent(PfeChip.events.load);\n        }\n    }\n  }\n}\n\nPFElement.create(PfeChip);\n\nexport default PfeChip;\n"],"names":["PfeChip","PFElement","version","html","this","props","value","has_slot","printCloseButton","properties","read-only","title","type","default","prefixed","overflow","badge","slots","namedSlot","items","oneOf","$ref","tag","schemaUrl","templateUrl","styleUrl","[object Object]","setAttribute","removeAttribute","parentNode","removeChild","events","close","load","observedAttributes","PfeType","PfeTypes","Content","super","_text","shadowRoot","querySelector","_badge","_close","_add","_init","bind","_clickHandler","_keyupHandler","connectedCallback","addEventListener","attr","oldValue","newValue","attributeChangedCallback","firstChild","textContent","trim","firstElementChild","badgeContent","isNaN","console","warn","removeEventListener","event","emitEvent","key","keyCode","create"],"mappings":"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"}