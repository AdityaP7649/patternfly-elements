{"version":3,"file":"pfe-switch.umd.min.js","sources":["../_temp/pfe-switch.umd.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeSwitch 1.0.0-prerelease.39\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.umd\";\n\nclass PfeSwitch extends PFElement {\n  static get version() {\n    return \"1.0.0-prerelease.39\";\n  }\n\n  get html() {\n    return `<style>::slotted(input){position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}:host{--pfe-switch__toggle-knob--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-switch__toggle-knob--BackgroundColor--disabled:var(--pfe-theme--color--ui-disabled, #d2d2d2);--pfe-switch__toggle-knob--BoxShadow:0 0.0625rem 0.0625rem 0rem rgba(3, 3, 3, 0.05),0 0.25rem 0.5rem 0.25rem rgba(3, 3, 3, 0.06);--pfe-switch__toggle--BackgroundColor:#d2d2d2;--pfe-switch__toggle--BackgroundColor--checked:var(--pfe-theme--color--ui-base, #0477a4);--pfe-switch__toggle--BackgroundColor--disabled:var(--pfe-theme--color--ui-disabled--text, #797979);--pfe-switch__label--Color--default:var(--pfe-theme--color--text, #333);--pfe-switch__label--Color--checked:var(--pfe-theme--color--ui-disabled--text, #797979);--pfe-switch__label--Color--disabled:var(--pfe-theme--color--ui-disabled--text, #797979);--pfe-switch__label--Outline--focused:var(--pfe-theme--color--ui-base, #0477a4);position:relative;display:inline-block;margin:0 1.5em 0 0;overflow:hidden}:host([hidden]){display:none}:host(.pfe-focused){outline:2px solid var(--pfe-switch__label--Outline--focused);outline-offset:.25em}.pfe-sr-only,::slotted(.pfe-sr-only){text-indent:-9999em}::slotted(label)::before{content:\"\";position:absolute;top:0;left:0;display:block;background:red;width:100px;height:100px}::slotted(label){position:relative;display:block;min-height:calc(1.5 * 1em);min-height:calc(var(--pfe-theme--line-height,1.5) * 1em);padding-left:3.125em;font-size:16px;font-size:var(--pfe-theme--font-size,16px);line-height:1.5;line-height:var(--pfe-theme--line-height,1.5);color:var(--pfe-switch__label--Color--default);cursor:pointer}::slotted(label):after{content:'';position:absolute;top:5px;left:5px;display:block;width:.875em;height:.875em;border-radius:50%;background:var(--pfe-switch__toggle-knob--BackgroundColor);-webkit-box-shadow:var(--pfe-switch__toggle-knob--BoxShadow);box-shadow:var(--pfe-switch__toggle-knob--BoxShadow);-webkit-transition:-webkit-transform .25s cubic-bezier(.21,.84,.56,1.55);transition:-webkit-transform .25s cubic-bezier(.21,.84,.56,1.55);transition:transform .25s cubic-bezier(.21,.84,.56,1.55);transition:transform .25s cubic-bezier(.21,.84,.56,1.55),-webkit-transform .25s cubic-bezier(.21,.84,.56,1.55)}::slotted(label),::slotted(label) :host([pfe-hide-label=false]){padding-left:3.125em}:host([pfe-hide-label]) ::slotted(label){padding-left:2.625em}::slotted(.pfe-sr-only){min-width:42px}:host([pfe-checked]){--pfe-switch__label--Color:var(--pfe-switch__label--Color--checked);--pfe-switch__toggle--BackgroundColor:var(--pfe-switch__toggle--BackgroundColor--checked)}:host([pfe-checked]) ::slotted(label):after{-webkit-transform:translate(32px) translate(-100%);transform:translate(32px) translate(-100%)}:host([pfe-disabled]){--pfe-switch__label--Color:var(--pfe-switch__label--Color--disabled);--pfe-switch__toggle--BackgroundColor:var(--pfe-switch__toggle--BackgroundColor--disabled);--pfe-switch__toggle-knob--BackgroundColor:var(--pfe-switch__toggle-knob--BackgroundColor--disabled)}.pfe-switch__checkmark{position:absolute;top:calc(1.5 * .5em);top:calc(var(--pfe-theme--line-height,1.5) * .5em);left:-.3125em;display:block;width:36px;height:58.896px;-webkit-transform:translate(0,-50%) scale(.16667) translate(-.25em,1.25em);transform:translate(0,-50%) scale(.16667) translate(-.25em,1.25em);-webkit-transform-origin:center center;transform-origin:center center;pointer-events:none}.pfe-switch__checkmark:before{content:'';position:absolute;top:0;left:0;display:block;-webkit-box-sizing:border-box;box-sizing:border-box;width:36px;height:58.896px;border-color:var(--pfe-switch__toggle-knob--BackgroundColor);border-style:solid;border-width:0 14.4px 14.4px 0;-webkit-transform:translate(0,-50%) rotate(45deg);transform:translate(0,-50%) rotate(45deg);opacity:0;-webkit-transition:opacity .25s;transition:opacity .25s}:host([pfe-checked]) .pfe-switch__checkmark:before{opacity:1}:host([pfe-disabled]) .pfe-switch__checkmark:before{border-color:var(--pfe-switch__toggle-knob--BackgroundColor--disabled)}\n/*# sourceMappingURL=pfe-switch.min.css.map */\n</style><slot>\n</slot>`;\n  }\n\n  static get properties() {\n    return {\"form\":{\"title\":\"Form\",\"type\":\"string\",\"enum\":[],\"default\":\"\",\"prefixed\":true}};\n  }\n\n  static get slots() {\n    return {\"default\":{\"title\":\"Default slot\",\"type\":\"array\",\"namedSlot\":false,\"items\":{\"oneOf\":[{\"$ref\":\"raw\"}]}}};\n  }\n  static get tag() {\n    return \"pfe-switch\";\n  }\n\n  get schemaUrl() {\n    return \"pfe-switch.json\";\n  }\n\n  get templateUrl() {\n    return \"pfe-switch.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-switch.scss\";\n  }\n\n  static get events() {\n    return {\n      change: `${this.tag}:change`\n    };\n  }\n\n  get pfeChecked() {\n    return this.getAttribute(\"pfe-checked\");\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get observedAttributes() {\n    return [\"pfe-message-on\", \"pfe-message-off\", \"pfe-hide-label\"];\n  }\n\n  constructor() {\n    super(PfeSwitch, { type: PfeSwitch.PfeType });\n    // Ensure that 'this' is the 'this' we want when used in _updateSwitchState\n    this._updateSwitchState = this._updateSwitchState.bind(this);\n    this._inputFocusHandler = this._inputFocusHandler.bind(this);\n    this._inputBlurHandler = this._inputBlurHandler.bind(this);\n    // Instatiate a settings object\n    this.settings = {};\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Get settings from attributes\n    const settingAttributes = [\n      \"pfe-message-on\",\n      \"pfe-message-off\",\n      \"pfe-hide-label\"\n    ];\n    for (let index = 0; index < settingAttributes.length; index++) {\n      const settingAttribute = settingAttributes[index];\n      // Adds settings to an object and lops of `data-` from the index\n      this.settings[settingAttribute] = this.getAttribute(settingAttribute);\n    }\n\n    // Get a reference to the checkbox and label that should be slotted\n    this.checkbox = null;\n    this.label = null;\n    const assignedElements = this.shadowRoot\n      .querySelector(\"slot\")\n      .assignedElements();\n    for (let index = 0; index < assignedElements.length; index++) {\n      const assignedElement = assignedElements[index];\n      switch (assignedElement.tagName) {\n        case \"LABEL\":\n          this.label = assignedElement;\n          break;\n        case \"INPUT\":\n          this.checkbox = assignedElement;\n          break;\n      }\n    }\n\n    if (this.label) {\n      // Get the fallback text and store it as a var\n      this.settings[\"pfe-fallback-text\"] = this.label.textContent;\n\n      // Hide the label if necessary\n      if (this.settings[\"pfe-hide-label\"]) {\n        this.label.classList.add(\"pfe-sr-only\");\n        const switchIcon = document.createElement(\"span\");\n        switchIcon.classList.add(\"pfe-switch__checkmark\");\n        this.shadowRoot.appendChild(switchIcon);\n      }\n\n      // Check for label text\n      if (!this.label.textContent.trim().length) {\n        console.error(\n          `${this.tag}: Label text not found. Form elements require meaningful label text for accessibility. The label can be visually hidden, but must exist.`\n        );\n        return;\n      }\n\n      // Make sure we have a valid label with for\n      const labelFor = this.label.getAttribute(\"for\");\n      if (\n        labelFor !== null &&\n        labelFor.length &&\n        !document.getElementById(labelFor)\n      ) {\n        // There is a for attribute, but it doesn't point to anything\n        console.error(\n          `${this.tag}: Label element does not have a corresponding checkbox, label's for attribute is ${labelFor}`\n        );\n        this.setAttribute(\"pfe-disabled\", \"\");\n        return;\n      } else if (labelFor === null || !labelFor.length) {\n        // There isn't a for attribute\n        console.error(\n          `${this.tag}: Label does not have a for attribute, which is required for it to function. For attribute should have the id of the checkbox it is labelling.`\n        );\n        return;\n      }\n    } else {\n      // There isn't a label\n      console.error(\n        `${this.tag}: Label element with text and for element required for ${this.tag} to function`\n      );\n      return;\n    }\n\n    // Resolve switch state when connected\n    this._updateSwitchState();\n\n    // Resolve switch state if the checkboxes changes\n    this.checkbox.addEventListener(\"change\", this._updateSwitchState);\n\n    this.checkbox.addEventListener(\"focus\", this._inputFocusHandler);\n    this.checkbox.addEventListener(\"blur\", this._inputBlurHandler);\n  }\n\n  disconnectedCallback() {\n    if (this.checkbox) {\n      this.checkbox.removeEventListener(\"change\", this._updateSwitchState);\n      this.checkbox.removeEventListener(\"focus\", this._inputFocusHandler);\n      this.checkbox.removeEventListener(\"blur\", this._inputBlurHandler);\n    }\n  }\n\n  // Process the attribute change\n  attributeChangedCallback(attr, oldValue, newValue) {\n    super.attributeChangedCallback(attr, oldValue, newValue);\n    this.settings[attr] = newValue;\n    this._updateSwitchState();\n  }\n\n  // Check the state of the checkbox and update everything accordingly\n  _updateSwitchState() {\n    if (this.checkbox !== null && typeof this.checkbox !== \"undefined\") {\n      // Update disabled status\n      if (this.checkbox.getAttribute(\"disabled\") !== null) {\n        this.setAttribute(\"pfe-disabled\", \"\");\n      } else {\n        this.removeAttribute(\"pfe-disabled\");\n      }\n\n      // Update checked status\n      if (this.checkbox.checked) {\n        this.checked = true;\n        this.setAttribute(\"pfe-checked\", \"\");\n        if (\n          this.settings[\"pfe-message-on\"] ||\n          this.settings[\"pfe-message-off\"]\n        ) {\n          if (this.settings[\"pfe-message-on\"]) {\n            this.label.textContent = this.settings[\"pfe-message-on\"];\n          } else {\n            this.label.textContent = this.settings[\"pfe-fallback-text\"];\n          }\n        }\n      } else {\n        this.checked = false;\n        this.removeAttribute(\"pfe-checked\");\n        if (\n          this.settings[\"pfe-message-on\"] ||\n          this.settings[\"pfe-message-off\"]\n        ) {\n          if (this.settings[\"pfe-message-off\"]) {\n            this.label.textContent = this.settings[\"pfe-message-off\"];\n          } else {\n            this.label.textContent = this.settings[\"pfe-fallback-text\"];\n          }\n        }\n      }\n    }\n  }\n\n  _inputFocusHandler() {\n    if (this.label !== null && typeof this.label !== \"undefined\") {\n      this.classList.add(\"pfe-focused\");\n    }\n  }\n\n  _inputBlurHandler() {\n    if (this.label !== null && typeof this.label !== \"undefined\") {\n      this.classList.remove(\"pfe-focused\");\n    }\n  }\n}\n\nPFElement.create(PfeSwitch);\n\nexport default PfeSwitch;\n"],"names":["PfeSwitch","PFElement","this","getAttribute","form","title","type","enum","default","prefixed","namedSlot","items","oneOf","$ref","tag","PfeTypes","Content","settingAttributes","index","length","settingAttribute","settings","checkbox","label","assignedElements","shadowRoot","querySelector","assignedElement","tagName","textContent","classList","add","switchIcon","document","createElement","appendChild","trim","labelFor","getElementById","error","setAttribute","_updateSwitchState","addEventListener","_inputFocusHandler","_inputBlurHandler","removeEventListener","attr","oldValue","newValue","removeAttribute","checked","remove","PfeType","_this","bind","create"],"mappings":"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"}