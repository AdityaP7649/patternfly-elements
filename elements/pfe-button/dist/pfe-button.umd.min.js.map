{"version":3,"file":"pfe-button.umd.min.js","sources":["../_temp/pfe-button.umd.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeButton 1.0.0-prerelease.39\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.umd\";\n\n// @IE11\n// watching for addition and removal of nodes so\n// we can make sure we have the correct light DOM\n// and so we can set the _externalBtn property\nconst parentObserverConfig = {\n  childList: true\n};\n\n// watching for changes on the _externalBtn so we can\n// update text in our shadow DOM when the _externalBtn\n// changes\nconst externalBtnObserverConfig = {\n  characterData: true,\n  attributes: true,\n  subtree: true,\n  childList: true\n};\n\n// list of attributes that we DO NOT want to pass from\n// the _externalBtn to our shadow DOM button. For example,\n// the style attribute could ruin our encapsulated styles\n// in the shadow DOM\nconst blackListedAttributes = [\"style\"];\n\nclass PfeButton extends PFElement {\n  static get version() {\n    return \"1.0.0-prerelease.39\";\n  }\n\n  get html() {\n    return `<style>:host{display:inline-block}:host([hidden]){display:none}:host([pfe-variant=primary]) button,button{background-color:#06c;color:#fff;font-size:16px;padding:8px 16px;cursor:pointer;border-radius:3px;border:0;position:relative}:host([pfe-variant=primary]) button:after,button:after{position:absolute;top:0;left:0;right:0;bottom:0;content:\"\"}:host([pfe-variant=primary]) button:focus,:host([pfe-variant=primary]) button:hover,button:focus,button:hover{background-color:#004080}:host([pfe-variant=secondary]) button{background-color:transparent;color:#06c}:host([pfe-variant=secondary]) button:after{border:1px solid #06c;border-radius:3px}:host([pfe-variant=secondary]) button:focus:after,:host([pfe-variant=secondary]) button:hover:after{border:2px solid #06c}:host([pfe-variant=tertiary]) button{background-color:transparent;color:#151515}:host([pfe-variant=tertiary]) button:after{border:1px solid #151515;border-radius:3px}:host([pfe-variant=tertiary]) button:focus:after,:host([pfe-variant=tertiary]) button:hover:after{border:2px solid #151515}:host([pfe-variant=danger]) button{background-color:#c9190b;color:#fff}:host([pfe-variant=danger]) button:focus,:host([pfe-variant=danger]) button:hover{background-color:#a30000}:host([pfe-variant=control]) button{background-color:transparent;color:#151515;border-radius:0}:host([pfe-variant=control]) button:after{border:1px solid #ededed;border-bottom-color:#8a8d90}:host([pfe-variant=control]) button:focus:after,:host([pfe-variant=control]) button:hover:after{border-bottom-width:2px;border-bottom-color:#06c}:host([pfe-variant=control][disabled]) button{background-color:transparent}:host([disabled]) button{background-color:#d2d2d2;color:#737679;pointer-events:none}:host([disabled]) button:focus,:host([disabled]) button:hover{background-color:#d2d2d2}:host([disabled]) button:focus:after,:host([disabled]) button:hover:after{border:0}:host([disabled]) button:after{border:0}\n/*# sourceMappingURL=pfe-button.min.css.map */\n</style><span id=\"internalBtn\"></span>`;\n  }\n\n  static get properties() {\n    return {\"variant\":{\"title\":\"Style variant\",\"type\":\"string\",\"prefixed\":true,\"enum\":[\"primary\",\"secondary\",\"tertiary\",\"danger\",\"control\"]}};\n  }\n\n  static get slots() {\n    return {\"default\":{\"title\":\"Default slot\",\"type\":\"array\",\"namedSlot\":false,\"items\":{\"oneOf\":[{\"$ref\":\"raw\"}]}}};\n  }\n  static get tag() {\n    return \"pfe-button\";\n  }\n\n  get schemaUrl() {\n    return \"pfe-button.json\";\n  }\n\n  get templateUrl() {\n    return \"pfe-button.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-button.scss\";\n  }\n\n  get disabled() {\n    return this.hasAttribute(\"disabled\");\n  }\n\n  static get events() {\n    return {\n      click: `${this.tag}:click`\n    };\n  }\n\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get observedAttributes() {\n    return [\"disabled\"];\n  }\n\n  constructor() {\n    super(PfeButton, { type: PfeButton.PfeType });\n\n    this._init = this._init.bind(this);\n    this._parentObserverHandler = this._parentObserverHandler.bind(this);\n    this._clickHandler = this._clickHandler.bind(this);\n    this._internalBtnContainer = this.shadowRoot.querySelector(\"#internalBtn\");\n    this._observer = new MutationObserver(this._parentObserverHandler);\n    this._externalBtnClickHandler = this._externalBtnClickHandler.bind(this);\n    this._externalBtnObserver = new MutationObserver(this._init);\n\n    this.addEventListener(\"click\", this._clickHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._externalBtn = this.querySelector(\"button\");\n\n    if (this.children.length) {\n      this._init();\n    }\n\n    this._observer.observe(this, parentObserverConfig);\n\n    if (this._externalBtn) {\n      this._externalBtnObserver.observe(\n        this._externalBtn,\n        externalBtnObserverConfig\n      );\n    }\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener(\"click\", this._clickHandler);\n    this._observer.disconnect();\n    this._externalBtnObserver.disconnect();\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback(attr, oldVal, newVal);\n\n    switch (attr) {\n      case \"disabled\":\n        if (!this._externalBtn) {\n          return;\n        }\n\n        if (this.disabled) {\n          this._externalBtn.setAttribute(\"disabled\", \"\");\n        } else {\n          this._externalBtn.removeAttribute(\"disabled\");\n        }\n        break;\n    }\n  }\n\n  _init() {\n    if (!this._isValidLightDom()) {\n      return;\n    }\n\n    if (!this._externalBtn) {\n      return;\n    }\n\n    this._externalBtnObserver.disconnect();\n\n    if (this._externalBtn.hasAttribute(\"disabled\")) {\n      this.setAttribute(\"disabled\", \"\");\n    } else {\n      this.removeAttribute(\"disabled\");\n    }\n\n    const clone = this._externalBtn.cloneNode(true);\n    blackListedAttributes.forEach(attribute => {\n      if (clone.hasAttribute) {\n        clone.removeAttribute(attribute);\n      }\n    });\n\n    this._internalBtnContainer.innerHTML = clone.outerHTML;\n    this._externalBtnObserver.observe(\n      this._externalBtn,\n      externalBtnObserverConfig\n    );\n\n    this._externalBtn.addEventListener(\"click\", this._externalBtnClickHandler);\n  }\n\n  _isValidLightDom() {\n    if (!this.children.length) {\n      console.warn(`${PfeButton.tag}: You must have a button in the light DOM`);\n      return false;\n    }\n\n    if (this.children[0].tagName !== \"BUTTON\") {\n      console.warn(\n        `${PfeButton.tag}: The only child in the light DOM must be a button tag`\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // when the parent changes, make sure the light DOM is valid,\n  // set the _externalBtn, and initialize the component\n  _parentObserverHandler() {\n    if (!this._isValidLightDom()) {\n      return;\n    }\n\n    this._externalBtn = this.querySelector(\"button\");\n    this._init();\n  }\n\n  // programmatically clicking the _externalBtn is what makes\n  // this web component button work in a form as you'd expect\n  _clickHandler() {\n    this._externalBtn.click();\n  }\n\n  _externalBtnClickHandler() {\n    this.emitEvent(PfeButton.events.click);\n  }\n}\n\nPFElement.create(PfeButton);\n\nexport default PfeButton;\n"],"names":["parentObserverConfig","externalBtnObserverConfig","blackListedAttributes","PfeButton","PFElement","this","hasAttribute","variant","title","type","prefixed","enum","default","namedSlot","items","oneOf","$ref","tag","PfeTypes","Content","_externalBtn","querySelector","children","length","_init","_observer","observe","_externalBtnObserver","removeEventListener","_clickHandler","disconnect","attr","oldVal","newVal","disabled","setAttribute","removeAttribute","_isValidLightDom","clone","cloneNode","forEach","attribute","_internalBtnContainer","innerHTML","outerHTML","addEventListener","_externalBtnClickHandler","tagName","warn","click","emitEvent","events","PfeType","_this","bind","_parentObserverHandler","shadowRoot","MutationObserver","create"],"mappings":"myBA+BMA,EAAuB,YAChB,GAMPC,EAA4B,gBACjB,cACH,WACH,aACE,GAOPC,EAAwB,CAAC,SAEzBC,+TAAkBC,2jEAuBb,4DAIA,yDAIA,0DAIAC,KAAKC,aAAa,oDAjClB,+DAUA,CAACC,QAAU,CAACC,MAAQ,gBAAgBC,KAAO,SAASC,UAAW,EAAKC,KAAO,CAAC,UAAU,YAAY,WAAW,SAAS,iDAItH,CAACC,QAAU,CAACJ,MAAQ,eAAeC,KAAO,QAAQI,WAAY,EAAMC,MAAQ,CAACC,MAAQ,CAAC,CAACC,KAAO,6CAG9F,kDAoBA,OACKX,KAAKY,qDAKVb,EAAUc,SAASC,yDAInB,CAAC,qKAmBHC,aAAef,KAAKgB,cAAc,UAEnChB,KAAKiB,SAASC,aACXC,aAGFC,UAAUC,QAAQrB,KAAML,GAEzBK,KAAKe,mBACFO,qBAAqBD,QACxBrB,KAAKe,aACLnB,uDAMC2B,oBAAoB,QAASvB,KAAKwB,oBAClCJ,UAAUK,kBACVH,qBAAqBG,8DAGHC,EAAMC,EAAQC,iHACNF,EAAMC,EAAQC,GAErCF,OACD,eACE1B,KAAKe,oBAINf,KAAK6B,cACFd,aAAae,aAAa,WAAY,SAEtCf,aAAagB,gBAAgB,gDAOnC/B,KAAKgC,oBAILhC,KAAKe,mBAILO,qBAAqBG,aAEtBzB,KAAKe,aAAad,aAAa,iBAC5B6B,aAAa,WAAY,SAEzBC,gBAAgB,gBAGjBE,EAAQjC,KAAKe,aAAamB,WAAU,KACpBC,QAAQ,YACxBF,EAAMhC,gBACF8B,gBAAgBK,UAIrBC,sBAAsBC,UAAYL,EAAMM,eACxCjB,qBAAqBD,QACxBrB,KAAKe,aACLnB,QAGGmB,aAAayB,iBAAiB,QAASxC,KAAKyC,6EAI5CzC,KAAKiB,SAASC,OAKc,WAA7BlB,KAAKiB,SAAS,GAAGyB,kBACXC,KACH7C,EAAUc,+DAGR,YATC+B,KAAQ7C,EAAUc,kDACnB,oDAiBJZ,KAAKgC,0BAILjB,aAAef,KAAKgB,cAAc,eAClCG,sDAMAJ,aAAa6B,gEAIbC,UAAU/C,EAAUgD,OAAOF,gWA3H1B9C,EAAW,CAAEM,KAAMN,EAAUiD,oBAE9B5B,MAAQ6B,EAAK7B,MAAM8B,UACnBC,uBAAyBF,EAAKE,uBAAuBD,UACrDzB,cAAgBwB,EAAKxB,cAAcyB,UACnCZ,sBAAwBW,EAAKG,WAAWnC,cAAc,kBACtDI,UAAY,IAAIgC,iBAAiBJ,EAAKE,0BACtCT,yBAA2BO,EAAKP,yBAAyBQ,UACzD3B,qBAAuB,IAAI8B,iBAAiBJ,EAAK7B,SAEjDqB,iBAAiB,QAASQ,EAAKxB,wBAqHxCzB,EAAUsD,OAAOvD"}